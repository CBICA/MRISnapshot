#!usr/bin/env python
# -*- coding: utf-8 -*-

import argparse
import os
import sys
import pandas as pd
from MRISnapshot import prep_dataset_main as pdm

## Set logger  ## FIXME to be updated
import logging
format='%(levelname)-8s [%(filename)s : %(lineno)d - %(funcName)20s()] %(message)s'
format='%(levelname)-8s %(message)s'
logging.basicConfig(level=logging.DEBUG, format = '\n' + format, datefmt='%Y-%m-%d:%H:%M:%S')
logger = logging.getLogger(__name__)

##logger.setLevel(logging.DEBUG)      ## While debugging
logger.setLevel(logging.INFO)    ## FIXME Debug comments will be removed in release version
FORMAT = "[%(filename)s:%(lineno)s - %(funcName)20s() ] %(message)s"

def usage_msg():
    """usage information"""
    descr = r"""------------------------
Description:
------------------------
Script to prepare input data for calling "snap_create_report()".

This script will generate two files inside the output folder:
 1. Image list: A list of underlay, mask (optional) and overlay (optional) images 
    (All files with the given suffixes in the given input folder)
 2. Configuration file: A list of parameters with default values;
    
After running this script, the user can:
 1. Edit the config file (optional)
 2. Edit the image list file (optional)
 3. Run "mrisnapshot_create_report()"

------------------------
Usage:
------------------------
%s [OPTIONS]

OPTIONS (Required):
[-i ] <path>      Input image directory
[--ulay ] <text>     Suffix of underlay images
[-d ] <path>     Output directory

OPTIONS (Optional):
[--mask   ] <text>  Suffix of mask images (default: no mask image)
[--olay   ] <text>  Suffix of overlay images (default: no overlay image)
[--olay2  ] <text>  Suffix of second overlay images (default: no second overlay image)

------------------------
Examples:
------------------------
See scripts in: test/Scripts

------------------------
Contact:
------------------------
guray.erus\@pennmedicine.upenn.edu
"""
    print(descr)
    

if __name__ == "__main__":
    
    ## Create parser
    parser = argparse.ArgumentParser(
        prog="MRISnapshot",
        formatter_class = argparse.RawTextHelpFormatter,
        description="QC Report", usage = usage_msg()
    )
    parser.add_argument("-i", dest="indir", type=str, help="Input image directory", required=True)
    parser.add_argument("--ulay", dest="s_ulay", type=str, help="Suffix of underlay images", required=True)
    parser.add_argument("-d", dest="outdir", type=str, help="Output directory", required=True)
    parser.add_argument("--mask", dest="s_mask", type=str, help="Suffix of mask images", required=False)
    parser.add_argument("--olay", dest="s_olay", type=str, help="Suffix of overlay images", required=False)
    parser.add_argument("--olay2", dest="s_olay2", type=str, help="Suffix of second overlay images", required=False)

    logger.info('-----------------------------------------')    
    logger.info('Running : ' + ' '.join(sys.argv))
    logger.info('-----------------------------------------')    

    ## Parse input args
    logger.info('  Parsing args ...')
    params = parser.parse_args()

    ## Update args
    params.in_dir = os.path.abspath(params.indir)
    params.out_dir = os.path.abspath(params.outdir)
    
    ## Prepare data
    logger.info('  Preparing image list and configuration file ...')
    pdm.prep_dataset(params)
    
    

